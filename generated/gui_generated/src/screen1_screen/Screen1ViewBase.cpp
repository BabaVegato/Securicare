/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{
    TILEDIMG_BG_Screen1.setBitmap(Bitmap(BITMAP_BLUE_TEXTURES_BINDING_LIGHT_ID));
    TILEDIMG_BG_Screen1.setPosition(0, 0, 240, 320);
    TILEDIMG_BG_Screen1.setOffset(0, 0);

    toggleButton1.setXY(56, 209);
    toggleButton1.setVisible(false);
    toggleButton1.setBitmaps(Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButton1.setAction(buttonCallback);

    BTN_Go_Screen_Auth.setXY(19, 243);
    BTN_Go_Screen_Auth.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    BTN_Go_Screen_Auth.setAction(buttonCallback);

    TXT_Bonjour.setXY(28, 16);
    TXT_Bonjour.setColor(touchgfx::Color::getColorFrom24BitRGB(21, 156, 228));
    TXT_Bonjour.setLinespacing(0);
    TXT_Bonjour.setTypedText(TypedText(T_SINGLEUSEID2));

    image1.setXY(32, 257);
    image1.setBitmap(Bitmap(BITMAP_DARK_ICONS_SETTINGS_32_ID));

    TXT_Nb_Voleurs.setXY(42, 81);
    TXT_Nb_Voleurs.setColor(touchgfx::Color::getColorFrom24BitRGB(21, 156, 228));
    TXT_Nb_Voleurs.setLinespacing(0);
    TXT_Nb_Voleurs.setAlpha(0);
    Unicode::snprintf(TXT_Nb_VoleursBuffer, TXT_NB_VOLEURS_SIZE, "%s", TypedText(T_SINGLEUSEID4).getText());
    TXT_Nb_Voleurs.setWildcard(TXT_Nb_VoleursBuffer);
    TXT_Nb_Voleurs.resizeToCurrentText();
    TXT_Nb_Voleurs.setTypedText(TypedText(T_SINGLEUSEID3));

    BTN_Go_Screen_Alarmes.setXY(160, 243);
    BTN_Go_Screen_Alarmes.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    BTN_Go_Screen_Alarmes.setAction(buttonCallback);

    image2.setXY(175, 256);
    image2.setBitmap(Bitmap(BITMAP_DARK_ICONS_MAP_32_ID));

    add(TILEDIMG_BG_Screen1);
    add(toggleButton1);
    add(BTN_Go_Screen_Auth);
    add(TXT_Bonjour);
    add(image1);
    add(TXT_Nb_Voleurs);
    add(BTN_Go_Screen_Alarmes);
    add(image2);
}

void Screen1ViewBase::setupScreen()
{

}

//Called when the screen is done with transition/load
void Screen1ViewBase::afterTransition()
{
    //Interaction1
    //When screen is entered fade TXT_Nb_Voleurs
    //Fade TXT_Nb_Voleurs to alpha:255 with ExpoIn easing in 800 ms (48 Ticks)
    TXT_Nb_Voleurs.clearFadeAnimationEndedAction();
    TXT_Nb_Voleurs.startFadeAnimation(255, 48, EasingEquations::expoEaseIn);
}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
    {
        //rien
        //When toggleButton1 clicked call virtual function
        //Call updateLEDState
        updateLEDState();
    }
    else if (&src == &BTN_Go_Screen_Auth)
    {
        //Go_to_Screen_Auth
        //When BTN_Go_Screen_Auth clicked change screen to ScreenAuth
        //Go to ScreenAuth with screen transition towards West
        application().gotoScreenAuthScreenCoverTransitionWest();
    }
    else if (&src == &BTN_Go_Screen_Alarmes)
    {
        //Inter_Go_To_AlarmScreen
        //When BTN_Go_Screen_Alarmes clicked change screen to ScreenAlarme
        //Go to ScreenAlarme with screen transition towards East
        application().gotoScreenAlarmeScreenCoverTransitionEast();
    }
}
