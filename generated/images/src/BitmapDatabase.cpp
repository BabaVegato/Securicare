// -alpha_dither yes -dither 2 -non_opaque_image_format ARGB8888 -opaque_image_format RGB565 0x59256b7a
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _blue_buttons_round_edge_icon_button[];
extern const unsigned char _blue_buttons_round_edge_icon_button_pressed[];
extern const unsigned char _blue_progressindicators_bg_medium_progress_indicator_bg_square_0_degrees[];
extern const unsigned char _blue_textures_binding_light[];
extern const unsigned char _blue_textures_carbon_fibre[];
extern const unsigned char _blue_textures_mochagrunge[];
extern const unsigned char _blue_textures_tweed[];
extern const unsigned char _blue_textures_vaio_hard_edge[];
extern const unsigned char _blue_togglebars_toggle_round_large_button_off[];
extern const unsigned char _blue_togglebars_toggle_round_large_button_on[];
extern const unsigned char _blue_togglebars_toggle_small_button_off[];
extern const unsigned char _blue_togglebars_toggle_small_button_on[];
extern const unsigned char _dark_buttons_round_edge_icon_button[];
extern const unsigned char _dark_buttons_round_icon_button[];
extern const unsigned char _dark_buttons_round_icon_button_pressed[];
extern const unsigned char _dark_icons_back_arrow_48[];
extern const unsigned char _dark_icons_map_32[];
extern const unsigned char _dark_icons_next_arrow_48[];
extern const unsigned char _dark_icons_settings_32[];
extern const unsigned char _dark_pageindicator_dot_indicator_small_highlight[];
extern const unsigned char _dark_pageindicator_dot_indicator_small_normal[];

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _blue_buttons_round_edge_icon_button, 0, 60, 60, 7, 6, 46, 46, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_edge_icon_button_pressed, 0, 60, 60, 7, 6, 46, 46, touchgfx::Bitmap::ARGB8888 },
    { _blue_progressindicators_bg_medium_progress_indicator_bg_square_0_degrees, 0, 184, 20, 0, 0, 184, 20, touchgfx::Bitmap::RGB565 },
    { _blue_textures_binding_light, 0, 180, 180, 0, 0, 180, 180, touchgfx::Bitmap::RGB565 },
    { _blue_textures_carbon_fibre, 0, 24, 22, 0, 0, 24, 22, touchgfx::Bitmap::RGB565 },
    { _blue_textures_mochagrunge, 0, 400, 400, 0, 0, 400, 400, touchgfx::Bitmap::RGB565 },
    { _blue_textures_tweed, 0, 200, 200, 0, 0, 200, 200, touchgfx::Bitmap::RGB565 },
    { _blue_textures_vaio_hard_edge, 0, 37, 28, 0, 0, 37, 28, touchgfx::Bitmap::RGB565 },
    { _blue_togglebars_toggle_round_large_button_off, 0, 128, 38, 13, 1, 102, 36, touchgfx::Bitmap::ARGB8888 },
    { _blue_togglebars_toggle_round_large_button_on, 0, 128, 38, 13, 1, 102, 36, touchgfx::Bitmap::ARGB8888 },
    { _blue_togglebars_toggle_small_button_off, 0, 96, 38, 0, 0, 96, 38, touchgfx::Bitmap::RGB565 },
    { _blue_togglebars_toggle_small_button_on, 0, 96, 38, 0, 0, 96, 38, touchgfx::Bitmap::RGB565 },
    { _dark_buttons_round_edge_icon_button, 0, 60, 60, 7, 6, 46, 46, touchgfx::Bitmap::ARGB8888 },
    { _dark_buttons_round_icon_button, 0, 60, 60, 13, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _dark_buttons_round_icon_button_pressed, 0, 60, 60, 13, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _dark_icons_back_arrow_48, 0, 28, 48, 6, 16, 6, 14, touchgfx::Bitmap::ARGB8888 },
    { _dark_icons_map_32, 0, 31, 31, 3, 26, 26, 3, touchgfx::Bitmap::ARGB8888 },
    { _dark_icons_next_arrow_48, 0, 28, 48, 16, 17, 7, 12, touchgfx::Bitmap::ARGB8888 },
    { _dark_icons_settings_32, 0, 32, 32, 29, 12, 1, 6, touchgfx::Bitmap::ARGB8888 },
    { _dark_pageindicator_dot_indicator_small_highlight, 0, 15, 15, 3, 3, 9, 9, touchgfx::Bitmap::ARGB8888 },
    { _dark_pageindicator_dot_indicator_small_normal, 0, 15, 15, 3, 3, 9, 9, touchgfx::Bitmap::ARGB8888 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}

